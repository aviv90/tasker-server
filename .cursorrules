# Tasker Server - Cursor Rules

## 7-forgiving-commands
**פקודות סלחניות - תמיכה מלאה בהטיות עבריות**

כל פקודה או זיהוי intent חייבים להיות סלחניים כלפי המשתמש ולכלול את **כל ההטיות האפשריות**:

### דוגמה - פעלי עריכה:
```javascript
// ✅ נכון - כל ההטיות:
const isEditRequest = /מחק|מחקי|מחקו|תמחק|תמחקי|תמחקו|הורד|הורידי|הורידו|תוריד|תורידי|תורידו/i

// ❌ שגוי - רק צורה אחת:
const isEditRequest = /מחק|הורד|תוריד/i
```

### כללי הטיות עבריות:
1. **זכר יחיד**: מחק, תמחק, הורד, תוריד
2. **נקבה יחידה**: מחקי, תמחקי, הורידי, תורידי  
3. **רבים**: מחקו, תמחקו, הורידו, תורידו
4. **צורות בסיס**: סיר, צור, צייר, שנה, שפר

### יישום - 2 מסלולי זיהוי:

#### 1️⃣ Regex Heuristic (כשה-LLM Router כבוי):
- כל regex של intent detection צריך לכלול את כל ההטיות
- ב-Hebrew, אין להשתמש ב-`\b` (word boundaries) - לא עובד עם תווים עבריים
- דוגמה: `const isEditRequest = /מחק|מחקי|מחקו|תמחק|תמחקי|תמחקו.../i`

#### 2️⃣ LLM Router Prompt (כשה-LLM Router דלוק):
- הפרומפט ב-`buildRouterPrompt()` חייב לכלול את כל ההטיות
- יש לרשום בפירוש: "WITH ALL HEBREW CONJUGATIONS (male/female/plural)"
- דוגמה: `Remove: "הסר", "סיר", "תסיר", "תסירי", "תסירו", "מחק", "מחקי", "מחקו"...`

### חשוב ביותר:
**כל פקודה חדשה חייבת לעבוד בשני המסלולים!**
- עדכן גם את ה-Regex
- עדכן גם את ה-LLM Prompt

### מטרה:
המשתמש לא צריך לחשוב איך לנסח - הבוט צריך להבין כל נוסח סביר!

---

## 8-heroku-logs-command
**הרצת לוגים מ-Heroku בצורה נכונה**

כשצריך לבדוק לוגים של האפליקציה ב-Heroku, **חובה** להוסיף את הפרמטר `--app`:

### ✅ נכון:
```bash
heroku logs --app tasker-server -n 150
heroku logs --app tasker-server --tail
heroku logs --app tasker-server -n 100 | grep "שגיאה"
```

### ❌ שגוי:
```bash
heroku logs -n 150          # ← חסר --app tasker-server
heroku logs --tail          # ← חסר --app tasker-server
```

**סיבה**: ללא `--app`, Heroku CLI עלול לנסות לגלות את ה-app אוטומטית ולהיכשל או לגשת ל-app שגוי.

**מומלץ**: תמיד להוסיף `--app tasker-server` כדי למנוע טעויות.

---

## 9-no-auto-git-operations
**אל תבצע פעולות Git אוטומטיות - המשתמש יעשה זאת בעצמו**

### כלל חשוב:
**אל תבצע `git commit` או `git push` אוטומטית בסיום משימות.**

המשתמש מעדיף לבצע את פעולות ה-Git באופן ידני בעצמו:
1. **סקירת שינויים** לפני commit
2. **כתיבת commit message** בעצמו (אם רוצה)
3. **Push** רק כשמוכן

### מה מותר:
- ✅ להציע commit message (בטקסט)
- ✅ להראות איזה קבצים שונו
- ✅ לומר "מוכן ל-commit"

### מה אסור:
- ❌ `git add .` אוטומטי
- ❌ `git commit` אוטומטי
- ❌ `git push` אוטומטי

### Remote נכון:
- **GitHub**: `origin` (ברירת מחדל)
- **Heroku**: `heroku` (רק לדפלויים)

יש אינטגרציה עם GitHub, אז:
```bash
git push origin main        # ← push ל-GitHub
git push heroku main        # ← deploy ל-Heroku
```

**אם המשתמש מבקש push**, תמיד תשאל: "ל-GitHub (origin) או ל-Heroku?"

---

